#include<bits/stdc++.h>
#define ll long long
#define pb push_back
using namespace std;
const int N=1e5+10;
int n,k;
int wt[105];
int val[N];
int dp[N];
vector<int>g[N];

//KNAPSNACK 0/1
/*
ll solve(int idx,int wt_remain){
if(idx<0) return 0;
if(wt_remain<=0) return 0;
if(dp[idx][wt_remain]!=-1) return dp[idx][wt_remain];
ll ans=solve(idx-1,wt_remain);

if(wt_remain-wt[idx]>=0){
    ans=max(ans,solve(idx-1,wt_remain-wt[idx])+val[idx]);
}
return dp[idx][wt_remain]=ans;
}
*/


//FROG 1 + FROG 2
/*
int solve1(int n){
    if(n==0)return 0;
    if(dp[n]!=-1) return dp[n];


int ans=INT_MAX;

for(int j=1;j<=k;j++){
    if(n-j>=0){
        ans=min(ans,solve1(n-j)+abs(val[n]-val[n-j]));
    }
}

return dp[n]=ans;
}

*/

int solve2(int i){
if(dp[i]!=-1) return dp[i];
int ans=0;
for(auto child:g[i]){
   ans=max(ans,solve2(child)+1);
}

return dp[i]=ans;



}

int main(){
    memset(dp,-1,sizeof(dp));
 cin>>n>>k;
 for(int i=0;i<k;i++){
    int x,y;
    cin>>x>>y;
    g[x].pb(y);
 }
int ans=0;

for(int i=1;i<=n;i++){
    ans=max(ans,solve2(i));
}
cout<<ans<<endl;



}